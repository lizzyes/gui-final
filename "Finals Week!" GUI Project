import tkinter as tk
from tkinter import PhotoImage

# Create the main Tkinter application
root = tk.Tk()
root.title("Finals Week!")
root.geometry("800x800")

# Game variables
player_score = 0
current_dialogue_index = 0

# Load images
titlescreen = PhotoImage(file=r"C:\Users\lizes\Downloads\titlescreen.png")
movie_image = PhotoImage(file=r"C:\Users\lizes\Downloads\moviescene.png")
dorm_image = PhotoImage(file=r"C:\Users\lizes\Downloads\dormimage.png")
event_image = PhotoImage(file=r"C:\Users\lizes\Downloads\cafeteria.png")
study_image = PhotoImage(file=r"C:\Users\lizes\Downloads\dormimage.png")
good_ending_image = PhotoImage(file=r"C:\Users\lizes\Downloads\goodending.png")
bad_ending_image = PhotoImage(file=r"C:\Users\lizes\Downloads\badending.png")

# Set up background image
image_label = tk.Label(root, image=titlescreen)
image_label.pack()

# Dialogues for each phase
dialogues = {
    "first_choice": [
        "It's Tuesday, and you have been enjoying your free time before finals. Suddenly, you get a call from your best friend, Chris. He asks if you and your roommate, Alice, would be down to go watch a movie with him. You tell Alice, but she reminds you that you guys have a project due."
    ],
    "second_choice": [
        "The next day, Chris asks you to eat with him. You were planning on polishing your project during your lunch break, but you would also feel bad if you reject him. You weigh your options - should you eat with him, or keep working?"
    ],
}

endings = {
    "good": "Congratulations! You made responsible choices and balanced work and fun. Your finals week ended on a high note!",
    "bad": "Unfortunately, poor decisions caught up with you. Finals week was stressful, and you struggled to keep up. Better luck next semester!"
}

# Functions for game logic
def update_dialogue(dialogue_key):
    """Update the dialogue text based on the current game phase."""
    global current_dialogue_index
    label.config(text=dialogues[dialogue_key][current_dialogue_index])

def update_image(new_image):
    """Change the image displayed in the background."""
    image_label.config(image=new_image)
    image_label.image = new_image  # Keep reference to avoid garbage collection

def movie_choice():
    """Handle the first choice: Going to the movie."""
    global player_score
    label.config(
        text="You and your roommate accept the invitation to go see the movie. You end up having a great time all together, but you feel slightly guilty about not making progress on your group project. You decide tomorrow will be dedicated to catching up."
    )
    update_image(movie_image)
    player_score -= 1  # Bad choice
    button_one.pack_forget()
    button_two.pack_forget()
    show_next_button("second_choice")

def decline_movie():
    """Handle the first choice: Declining the movie."""
    global player_score
    label.config(
        text="You convince your roommate to stay at the dorms because of the amount of work still needing to be done on the project. You go to sleep exhausted that night, but you and Alice manage to finish most of the project."
    )
    update_image(dorm_image)
    player_score += 1  # Good choice
    button_one.pack_forget()
    button_two.pack_forget()
    show_next_button("second_choice")

def event_choice():
    """Handle the second choice: Eating with him"""
    global player_score
    label.config(
        text="You chose to hang out with Chris. You two ate together and talked, catching up on weeks worth of information. You both are all smiles by the end of your break, and then he drops you off to your class."
    )
    update_image(event_image)
    player_score += 1  # Good choice
    button_one.pack_forget()
    button_two.pack_forget()
    show_next_button("end")

def decline_event():
    """Handle the second choice: Declining the hangout"""
    global player_score
    label.config(
        text="You tell Chris that you're busy. He looks hurt, but he smiles and wishes you good luck. You feel slightly guilty, but stick with your decision. You manage to get some work done, but feel drained."
    )
    update_image(study_image)
    player_score -= 1  # Bad choice
    button_one.pack_forget()
    button_two.pack_forget()
    show_next_button("end")

def show_next_button(next_phase):
    """Show the NEXT button and set its command to transition to the next phase."""
    button_next.config(command=lambda: transition_to_phase(next_phase))
    button_next.pack(pady=20)

def transition_to_phase(phase):
    """Handle transitions between game phases."""
    if phase == "second_choice":
        update_dialogue("second_choice")
        button_next.pack_forget()
        button_one.config(text="Eat with him", command=event_choice)
        button_two.config(text="Decline", command=decline_event)
        button_one.pack(pady=10)
        button_two.pack(pady=10)
    elif phase == "end":
        display_ending()

def display_ending():
    """Determine and display the ending based on the player's score."""
    if player_score > 0:
        label.config(text=endings["good"])
        update_image(good_ending_image)
    else:
        label.config(text=endings["bad"])
        update_image(bad_ending_image)
    button_next.pack_forget()

# Main dialogue label
label = tk.Label(
    root,
    text=dialogues["first_choice"][0],
    wraplength=700,
    font=("Arial", 10)
)
label.pack(pady=10)

# Choice buttons
button_one = tk.Button(root, text="Go to the Movie", bg="pink", font=("Arial", 10), command=movie_choice)
button_one.pack(pady=10)

button_two = tk.Button(root, text="Decline", bg="pink", font=("Arial", 10), command=decline_movie)
button_two.pack(pady=10)

# NEXT button (hidden initially)
button_next = tk.Button(root, text="NEXT", bg="lightblue", font=("Arial", 10))
button_next.pack_forget()

# Start the Tkinter event loop
root.mainloop()
